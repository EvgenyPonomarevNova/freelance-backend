const express = require('express');
const router = express.Router();
const projectController = require('../controllers/projectController');
const { body } = require('express-validator');
const { protect } = require('../middleware/auth');

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
const validateProject = [
  body('title').notEmpty().isLength({ min: 5, max: 100 }),
  body('description').notEmpty().isLength({ min: 10, max: 2000 }),
  body('category').isIn(['development', 'design', 'marketing', 'writing', 'seo', 'other']),
  body('budget').isInt({ min: 1000 }),
  body('deadline').optional().isISO8601(),
  body('skills').optional().isArray()
];

// –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç–∫–ª–∏–∫–æ–≤
const validateResponse = [
  body('proposal').optional().isLength({ max: 1000 }),
  body('price').optional().isNumeric(),
  body('timeline').optional().isLength({ max: 100 })
];

const validateStatus = [
  body('status').notEmpty().isIn(['pending', 'accepted', 'rejected'])
];

// üî• –û–°–ù–û–í–ù–´–ï –ú–ê–†–®–†–£–¢–´ –î–õ–Ø –ü–†–û–ï–ö–¢–û–í
router.get('/', projectController.getProjects); // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
router.get('/:id', projectController.getProject); // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ ID
router.post('/', protect, validateProject, projectController.createProject); // –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç

// üî• –ú–ê–†–®–†–£–¢–´ –î–õ–Ø –û–¢–ö–õ–ò–ö–û–í
router.post('/:id/respond', protect, validateResponse, projectController.respondToProject);
router.patch('/:projectId/responses/:responseId', protect, validateStatus, projectController.updateResponseStatus);
router.get('/my/responses', protect, projectController.getMyResponses);
router.get('/client/my-projects', protect, projectController.getMyProjects);

module.exports = router;