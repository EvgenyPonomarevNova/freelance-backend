// models/index.js
const sequelize = require('../config/database');
const User = require('./User');
const Project = require('./Project');
const Chat = require('./Chat');
const Message = require('./Message');

// –°–≤—è–∑–∏
Project.belongsTo(User, { as: 'client', foreignKey: 'client_id' });
User.hasMany(Project, { as: 'projects', foreignKey: 'client_id' });

Chat.belongsTo(Project, { foreignKey: 'projectId' });
Chat.belongsTo(User, { as: 'client', foreignKey: 'clientId' });
Chat.belongsTo(User, { as: 'freelancer', foreignKey: 'freelancerId' });

Message.belongsTo(Chat, { foreignKey: 'chatId' });
Message.belongsTo(User, { as: 'sender', foreignKey: 'senderId' });

// –û–±—Ä–∞—Ç–Ω—ã–µ —Å–≤—è–∑–∏
Project.hasMany(Chat, { foreignKey: 'projectId' });
User.hasMany(Chat, { as: 'clientChats', foreignKey: 'clientId' });
User.hasMany(Chat, { as: 'freelancerChats', foreignKey: 'freelancerId' });
Chat.hasMany(Message, { foreignKey: 'chatId' });
User.hasMany(Message, { as: 'sentMessages', foreignKey: 'senderId' });

// üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
const syncDatabase = async () => {
  try {
    // –°–Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º User –æ—Ç–¥–µ–ª—å–Ω–æ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    await User.sync({ force: false, alter: { drop: false } });
    
    // –ó–∞—Ç–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏
    await Project.sync({ force: false, alter: { drop: false } });
    await Chat.sync({ force: false, alter: { drop: false } });
    await Message.sync({ force: false, alter: { drop: false } });
    
    console.log('‚úÖ Database synchronized successfully');
  } catch (error) {
    console.error('‚ùå Database synchronization failed:', error);
    
    // üî• –†–ï–ó–ï–†–í–ù–û–ï –†–ï–®–ï–ù–ò–ï: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü (–¢–û–õ–¨–ö–û –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò!)
    if (process.env.NODE_ENV === 'development') {
      console.log('üîÑ Attempting force sync for development...');
      try {
        await sequelize.sync({ force: true });
        console.log('‚úÖ Database force-synced successfully');
      } catch (forceError) {
        console.error('‚ùå Force sync also failed:', forceError);
      }
    }
  }
};

module.exports = {
  sequelize,
  syncDatabase,
  User,
  Project,
  Chat,
  Message
};